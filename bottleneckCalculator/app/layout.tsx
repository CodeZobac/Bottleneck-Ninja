import type { Metadata } from "next";
import "./globals.css";
import { AuthProvider } from "./providers/auth-provider";
import { ThemeProvider } from "next-themes";
import localFont from "next/font/local";


// Define the Geist fonts
const geistSans = localFont({
  src: [
    {
      path: '../node_modules/geist/dist/fonts/geist-sans/Geist-Regular.woff2',
      weight: '400',
      style: 'normal',
    },
    {
      path: '../node_modules/geist/dist/fonts/geist-sans/Geist-Medium.woff2',
      weight: '500',
      style: 'normal',
    },
    {
      path: '../node_modules/geist/dist/fonts/geist-sans/Geist-Bold.woff2',
      weight: '700',
      style: 'normal',
    }
  ],
  variable: '--font-geist-sans',
});

const geistMono = localFont({
  src: [
    {
      path: '../node_modules/geist/dist/fonts/geist-mono/GeistMono-Regular.woff2',
      weight: '400',
      style: 'normal',
    },
    {
      path: '../node_modules/geist/dist/fonts/geist-mono/GeistMono-Medium.woff2',
      weight: '500',
      style: 'normal',
    },
    {
      path: '../node_modules/geist/dist/fonts/geist-mono/GeistMono-Bold.woff2',
      weight: '700',
      style: 'normal',
    }
  ],
  variable: '--font-geist-mono',
});

// Rest of your code remains the same

export const metadata: Metadata = {
  title: "Bottleneck Calculator",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ThemeProvider
        attribute={"class"}
        defaultTheme={"system"}
        enableSystem={true}
        disableTransitionOnChange={true}>
          <AuthProvider>
            {children}
          </AuthProvider>
        </ThemeProvider>
    <svg 
      style={{
        position: "fixed",
        backgroundColor: "rgba(215, 215, 215, 1)",
        width: "100%", 
            height: "100%", 
            zIndex: -1,
            top: 0,
            left: 0,
            pointerEvents: "none"
          }} 
          width="100%" 
          height="100%" 
          xmlns="http://www.w3.org/2000/svg"
        >
          <defs>
            <pattern id="dottedGrid" width="30" height="30" patternUnits="userSpaceOnUse">
              <circle cx="2" cy="2" r="1" fill="rgba(0,0,0,0.15)" />
            </pattern>
          </defs>
          <rect width="100%" height="100%" fill="url(#dottedGrid)" />
        </svg>
      </body>
    </html>
  );
}
